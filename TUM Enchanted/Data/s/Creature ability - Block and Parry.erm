ZVSE2
; Author:   Archer30
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Third Upgrade Mod

; Defining Block (ignore 100% physical damage) and Parry (ignore 50% physical damage) abilities of creatures

!#VRi^shieldBlockTriggered^:S(FALSE);

// Funciton to check if the chance of Block of a monster (Ignore 100% of damage)
!?FU(blopar_CheckMonBlockChance);
!#VA(mon:x) (result:x);

!!VR(result):S(FALSE);
; ========================== TESTING ==========================
!!VR(result)&(mon)=(MON_CRUSADER):S10;
!!VR(result)&(mon)=200:S10; Preator
!!VR(result)&(mon)=(MON_CHAMPION):S10;
!!VR(result)&(mon)=202:S10; Holy Champion
!!VR(result)&(mon)=(MON_ARCHANGEL):S10;
!!VR(result)&(mon)=(MON_SUPREME_ARCHANGEL):S10;

!!VR(result)&(mon)=211:S20; Steel Golem

!!VR(result)&(mon)=(MON_SKELETON_WARRIOR):S5;
!!VR(result)&(mon)=221:S5; Skeleton Soldier
!!VR(result)&(mon)=(MON_DREAD_KNIGHT):S5;
!!VR(result)&(mon)=226:S5; Death Knight

!!VR(result)&(mon)=249:S30; Gemstone Elemental

!!VR(result)&(mon)=(MON_DIAMOND_GOLEM):S40;

!!VR(result)&(mon)=(MON_CRYSTAL_DRAGON):S20;

; ======================== END TESTING ========================

// Funciton to check if the chance of Parry of a monster (Ignore 50% of damage)
!?FU(blopar_CheckMonParryChance);
!#VA(mon:x) (result:x);

!!VR(result):S(FALSE);
; ========================== TESTING ==========================
!!VR(result)&(mon)=197:S10; Imperial Soldier
!!VR(result)&(mon)=(MON_SWORDSMAN):S10;
!!VR(result)&(mon)=213:S20; Battlemage of the City of Ice and Steel
!!VR(result)&(mon)=(MON_NAGA):S10;
!!VR(result)&(mon)=(MON_NAGA_QUEEN):S15;
!!VR(result)&(mon)=214:S30; Master of the Six Blades
!!VR(result)&(mon)=(MON_ARCH_DEVIL):S10; 
!!VR(result)&(mon)=(MON_HELL_BARON):S20; 
!!VR(result)&(mon)=(MON_ROGUE):S10;

; ======================== END TESTING ========================

!?FU(OnStackToStackDamage);
!#VA(atkStack:x) (defStack:x) (finalDmgConst:x) (finalDmg:x) (basicDmg:x) (dmgBonus:x) (isDistant:x) (distanceArg:x) (isTheoretical:x);

!!VRi^shieldBlockTriggered^:S(FALSE);

; Skip theoretical (mouse hover)
!!FU&(isTheoretical):E;

!!BM(defStack):T?(mon:y);

; Check if mon can block
!!FU(blopar_CheckMonBlockChance):P(mon)/?(chance:y);

!!if&(chance)>0;
  !!VR(random:y):R0/0/99;

  !!if&(random)<(chance);
    !!VR(finalDmg):S0;                  [100% damage reduction]
    !!VRi^shieldBlockTriggered^:S(TRUE);

    !!if&i^battle_isVisible^;
      ; Show animation and battle log
      !!BM(defStack):N?(num:y);
      !!VR(isPlural:y):S(num) -1 B;
      !!SN:H^monname^/(mon)/(isPlural)/?(monName:z);
      !!SN:T^dio.block^/?(battleLog:z)/^mon^/(monName);
      !!MM:S(battleLog);

      // Set up defence animation (by setting defence flag)
      !!BM(defStack):V85 F?(flags:y);
      !!VR(isDefending:y):S(flags) &(MON_FLAG_DEFENDING);

      !!if&(isDefending)=(FALSE);
        !!VRi^blopar_stackToDefendPlusOne^:S(defStack) +1;
        !!BM(defStack):Fd|(MON_FLAG_DEFENDING);
      !!en;
    !!en;
  !!en;

  !!FU:E;
!!en;

; Check if mon can Parry if no block
!!FU(blopar_CheckMonParryChance):P(mon)/?(chance);

!!if&(chance)>0;
  !!VR(random:y):R0/0/99;

  !!if&(random)<(chance);
    !!VR(finalDmg)::2;                  [50% damage]

    !!if&i^battle_isVisible^;
      ; Show animation and battle log
      !!BM(defStack):N?(num:y);
      !!VR(isPlural:y):S(num) -1 B;
      !!SN:H^monname^/(mon)/(isPlural)/?(monName:z);
      !!SN:T^dio.parry^/?(battleLog:z)/^mon^/(monName);
      !!MM:S(battleLog);

      // Set up defence animation (by setting defence flag)
      !!BM(defStack):V86 F?(flags:y);
      !!VR(isDefending:y):S(flags) &(MON_FLAG_DEFENDING);

      !!if&(isDefending)=(FALSE);
        !!VRi^blopar_stackToDefendPlusOne^:S(defStack) +1;
        !!BM(defStack):Fd|(MON_FLAG_DEFENDING);
      !!en;
    !!en;
  !!en;
!!en;

// Restore defence flag if set for animation
!?FU(tum_OnAfterAttack)&i^battle_isVisible^/i^blopar_stackToDefendPlusOne^>0;
!!VR(stack:y):Si^blopar_stackToDefendPlusOne^ -1;
!!BM(stack):Fd~(MON_FLAG_DEFENDING);
!!VRi^blopar_stackToDefendPlusOne^:S0;
